{"remainingRequest":"D:\\xblog\\xblog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\xblog\\xblog-admin\\src\\views\\blog\\edit\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\xblog\\xblog-admin\\src\\views\\blog\\edit\\index.vue","mtime":1583590624587},{"path":"D:\\xblog\\xblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xblog\\xblog-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\xblog\\xblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xblog\\xblog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport request from '@/utils/request'\r\nimport { fetchTagList } from '@/api/tag'\r\nimport { fetchBlog, updateBlog, addBlog } from '@/api/blog'\r\nimport Upload from '@/components/Upload'\r\n\r\nexport default {\r\n  components: {\r\n    lbUpload: Upload\r\n  },\r\n  data() {\r\n    return {\r\n      id: this.$route.query.id,\r\n      form: {\r\n        id: '',\r\n        title: '',\r\n        content: '',\r\n        tag: '',\r\n        typeName: '',\r\n        originalUrl: '',\r\n        blogImage: ''\r\n      },\r\n      checkedTags: [],\r\n      tags: [],\r\n      typeMap: {\r\n        '原创': 1,\r\n        '转载': 2,\r\n        '翻译': 3\r\n      },\r\n      toolbars: {\r\n        bold: true, // 粗体\r\n        italic: true, // 斜体\r\n        header: true, // 标题\r\n        underline: true, // 下划线\r\n        strikethrough: true, // 中划线\r\n        mark: true, // 标记\r\n        superscript: true, // 上角标\r\n        subscript: true, // 下角标\r\n        quote: true, // 引用\r\n        ol: true, // 有序列表\r\n        ul: true, // 无序列表\r\n        link: true, // 链接\r\n        imagelink: true, // 图片链接\r\n        code: true, // code\r\n        table: true, // 表格\r\n        fullscreen: true, // 全屏编辑\r\n        readmodel: true, // 沉浸式阅读\r\n        htmlcode: true, // 展示html源码\r\n        help: true, // 帮助\r\n        /* 1.3.5 */\r\n        undo: true, // 上一步\r\n        redo: true, // 下一步\r\n        trash: true, // 清空\r\n        save: true, // 保存（触发events中的save事件）\r\n        /* 1.4.2 */\r\n        navigation: true, // 导航目录\r\n        /* 2.1.8 */\r\n        alignleft: true, // 左对齐\r\n        aligncenter: true, // 居中\r\n        alignright: true, // 右对齐\r\n        /* 2.2.1 */\r\n        subfield: true, // 单双栏模式\r\n        preview: true // 预览\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.initTags()\r\n    if (this.id) {\r\n      this.initForm()\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化标签列表\r\n    initTags() {\r\n      fetchTagList(1, 100).then(response => {\r\n        this.tags = response.data.list\r\n      })\r\n    },\r\n    initForm() {\r\n      fetchBlog(this.id).then(response => {\r\n        // 以下写法出现多余的属性\r\n        // this.form = response.data\r\n        for (const key in this.form) {\r\n          this.form[key] = response.data[key]\r\n        }\r\n        this.checkedTags = this.form.tag.split(',')\r\n      })\r\n    },\r\n    convertForm() {\r\n      // 转换form的tag形式\r\n      let result = ''\r\n      for (const checkedTag of this.checkedTags) {\r\n        for (const tag of this.tags) {\r\n          if (tag.name === checkedTag) {\r\n            result += tag.id + ','\r\n            break\r\n          }\r\n        }\r\n      }\r\n      result = result.substring(0, result.length - 1)\r\n      this.form.tag = result\r\n\r\n      // 转换form的type形式\r\n      this.form.type = this.typeMap[this.form.typeName]\r\n    },\r\n    onSubmit() {\r\n      this.convertForm()\r\n      if (this.id) {\r\n        updateBlog(this.form).then(response => {\r\n          this.$message({\r\n            type: 'success',\r\n            message: '发布成功!'\r\n          })\r\n          this.reset()\r\n        })\r\n      } else {\r\n        addBlog(this.form).then(response => {\r\n          this.$message({\r\n            type: 'success',\r\n            message: '发布成功!'\r\n          })\r\n          this.reset()\r\n        })\r\n      }\r\n    },\r\n    imgAdd(pos, file) {\r\n      //  先验证\r\n      if (!this.validateImage(file)) return\r\n      // 第一步.将图片上传到服务器.\r\n      const formData = new FormData()\r\n      formData.append('image', file)\r\n      request({\r\n        url: process.env.VUE_APP_UPLOAD_URL,\r\n        withCredentials: false,\r\n        method: 'post',\r\n        data: formData,\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      }).then((response) => {\r\n        // 第二步.将返回的url替换到文本原位置![...](0) -> ![...](url)\r\n        this.$refs.md.$img2Url(pos, response.data.url)\r\n      })\r\n    },\r\n    validateImage(file) {\r\n      const isImg = (file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/gif' || file.type === 'image/bmp')\r\n      const isLt4M = file.size / 1024 / 1024 < 4\r\n\r\n      if (!isImg) {\r\n        this.$message.error('上传的文件必须是图片!')\r\n      }\r\n      if (!isLt4M) {\r\n        this.$message.error('上传头像图片大小不能超过 4MB!')\r\n      }\r\n      return isImg && isLt4M\r\n    },\r\n    reset() {\r\n      for (const key in this.form) {\r\n        this.form[key] = ''\r\n      }\r\n      this.id = ''\r\n      this.checkedTags = []\r\n    }\r\n  }\r\n}\r\n",null]}