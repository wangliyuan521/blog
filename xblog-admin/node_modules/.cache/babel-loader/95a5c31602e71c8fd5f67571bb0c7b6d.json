{"remainingRequest":"D:\\xblog\\xblog-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\xblog\\xblog-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\xblog\\xblog-admin\\src\\router\\index.js","dependencies":[{"path":"D:\\xblog\\xblog-admin\\src\\router\\index.js","mtime":1583764473708},{"path":"D:\\xblog\\xblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xblog\\xblog-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\xblog\\xblog-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\xblog\\\\xblog-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetRouter = resetRouter;\nexports.default = exports.constantRoutes = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"D:\\\\xblog\\\\xblog-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/interopRequireWildcard\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _vueRouter = _interopRequireDefault(require(\"vue-router\"));\n\nvar _layout = _interopRequireDefault(require(\"@/layout\"));\n\n_vue.default.use(_vueRouter.default);\n/* Layout */\n\n\n/**\n * Note: sub-menu only appear when route children.length >= 1\n * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html\n *\n * hidden: true                   if set true, item will not show in the sidebar(default is false)\n * alwaysShow: true               if set true, will always show the root menu\n *                                if not set alwaysShow, when item has more than one children route,\n *                                it will becomes nested mode, otherwise not show the root menu\n * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb\n * name:'router-name'             the name is used by <keep-alive> (must set!!!)\n * meta : {\n    roles: ['admin','editor']    control the page roles (you can set multiple roles)\n    title: 'title'               the name show in sidebar and breadcrumb (recommend set)\n    icon: 'svg-name'             the icon show in the sidebar\n    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)\n    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set\n  }\n */\n\n/**\n * constantRoutes\n * a base page that does not have permission requirements\n * all roles can be accessed\n */\nvar constantRoutes = [{\n  path: '/login',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/login/index'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/404',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/404'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/',\n  component: _layout.default,\n  redirect: '/dashboard',\n  children: [{\n    path: 'dashboard',\n    name: 'Dashboard',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/dashboard/index'));\n      });\n    },\n    meta: {\n      title: '仪表盘',\n      icon: 'dashboard'\n    }\n  }]\n}, {\n  path: '/blog',\n  component: _layout.default,\n  redirect: '/blog/edit',\n  name: 'Blog',\n  meta: {\n    title: '博客管理',\n    icon: 'blog'\n  },\n  children: [{\n    path: 'edit',\n    name: 'Edit',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/blog/edit/index'));\n      });\n    },\n    meta: {\n      title: '发布博客',\n      icon: 'edit'\n    }\n  }, {\n    path: 'manage',\n    name: 'Manage',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/blog/manage/index'));\n      });\n    },\n    meta: {\n      title: '博客列表',\n      icon: 'manage'\n    }\n  }]\n}, {\n  path: '/user',\n  component: _layout.default,\n  children: [{\n    path: 'list',\n    name: 'User',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/user/index'));\n      });\n    },\n    meta: {\n      title: '用户管理',\n      icon: 'user'\n    }\n  }]\n}, {\n  path: '/comment',\n  component: _layout.default,\n  children: [{\n    path: 'index',\n    name: 'Comment',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/comment/index'));\n      });\n    },\n    meta: {\n      title: '评论管理',\n      icon: 'comment'\n    }\n  }]\n}, {\n  path: '/tag',\n  component: _layout.default,\n  children: [{\n    path: 'index',\n    name: 'Tag',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/tag/index'));\n      });\n    },\n    meta: {\n      title: '标签管理',\n      icon: 'tag'\n    }\n  }]\n}, {\n  path: '/project',\n  component: _layout.default,\n  children: [{\n    path: 'index',\n    name: 'Project',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/project/index'));\n      });\n    },\n    meta: {\n      title: '项目管理',\n      icon: 'project'\n    }\n  }]\n}, {\n  path: '/carousel',\n  component: _layout.default,\n  children: [{\n    path: 'index',\n    name: 'Carousel',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/carousel/index'));\n      });\n    },\n    meta: {\n      title: '轮播管理',\n      icon: 'carousel'\n    }\n  }]\n}, {\n  path: '/link',\n  component: _layout.default,\n  children: [{\n    path: 'index',\n    name: 'Link',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/link/index'));\n      });\n    },\n    meta: {\n      title: '外链管理',\n      icon: 'link'\n    }\n  }]\n}, // 404 page must be placed at the end !!!\n{\n  path: '*',\n  redirect: '/404',\n  hidden: true\n}];\nexports.constantRoutes = constantRoutes;\n\nvar createRouter = function createRouter() {\n  return new _vueRouter.default({\n    // mode: 'history', // require service support\n    scrollBehavior: function scrollBehavior() {\n      return {\n        y: 0\n      };\n    },\n    routes: constantRoutes\n  });\n};\n\nvar router = createRouter(); // Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465\n\nfunction resetRouter() {\n  var newRouter = createRouter();\n  router.matcher = newRouter.matcher; // reset router\n}\n\nvar _default = router;\nexports.default = _default;",null]}