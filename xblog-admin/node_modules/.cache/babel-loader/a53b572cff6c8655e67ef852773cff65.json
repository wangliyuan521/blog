{"remainingRequest":"D:\\xblog\\xblog-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\xblog\\xblog-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\xblog\\xblog-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\xblog\\xblog-admin\\src\\views\\user\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\xblog\\xblog-admin\\src\\views\\user\\index.vue","mtime":1583764183112},{"path":"D:\\xblog\\xblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xblog\\xblog-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\xblog\\xblog-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xblog\\xblog-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\xblog\\\\xblog-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _user = require(\"@/api/user\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _Upload = _interopRequireDefault(require(\"@/components/Upload\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ComplexTable',\n  components: {\n    lbUpload: _Upload.default,\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20\n      },\n      user: {\n        id: undefined,\n        username: '',\n        password: '',\n        role: '',\n        phone: '',\n        email: '',\n        sex: '',\n        avatar: '',\n        preInfo: '',\n        status: 0\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '更新',\n        create: '添加'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '账号必填项',\n          trigger: 'change'\n        }],\n        password: [{\n          required: true,\n          message: '密码必填项',\n          trigger: 'change'\n        }],\n        role: [{\n          required: true,\n          message: '角色必填项',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.refreshTable();\n  },\n  methods: {\n    refreshTable: function refreshTable() {\n      var _this = this;\n\n      (0, _user.fetchUserList)(this.listQuery).then(function (response) {\n        _this.list = response.data.list;\n        _this.total = response.data.total;\n      });\n    },\n    handleModifyStatus: function handleModifyStatus(row, status) {\n      var _this2 = this;\n\n      row.status = status;\n      row.updateTime = null;\n      (0, _user.updateUser)(row).then(function (response) {\n        // 刷新表格\n        _this2.refreshTable();\n\n        if (status === 1) {\n          _this2.$message({\n            message: '禁用成功',\n            type: 'success',\n            duration: 2000\n          });\n        } else {\n          _this2.$message({\n            message: '启用成功',\n            type: 'success',\n            duration: 2000\n          });\n        }\n      });\n    },\n    handleUpdate: function handleUpdate(row) {\n      var _this3 = this;\n\n      this.user = Object.assign({}, row); // copy obj\n\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs['dataForm'].clearValidate();\n      });\n    },\n    updateData: function updateData() {\n      var _this4 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          var formData = Object.assign({}, _this4.user);\n          (0, _user.updateUser)(formData).then(function () {\n            _this4.dialogFormVisible = false;\n\n            _this4.refreshTable();\n\n            _this4.$notify({\n              title: 'Success',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    // 删除操作\n    handleDelete: function handleDelete(row, index) {\n      var _this5 = this;\n\n      this.$confirm(\"\\u6B64\\u64CD\\u4F5C\\u5C06\\u6C38\\u4E45\\u5220\\u9664\\u8BE5\\u7528\\u6237, \\u662F\\u5426\\u7EE7\\u7EED?\", '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _user.deleteUser)(row.id).then(function (response) {\n          // 刷新表格\n          _this5.refreshTable();\n\n          _this5.$message({\n            title: 'Success',\n            message: '删除成功!',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      });\n    }\n  }\n};\nexports.default = _default;",null]}